<UserControl x:Class="HaRepacker.GUI.Panels.SubPanels.ImageRenderViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converter="clr-namespace:HaRepacker.Converter"
             mc:Ignorable="d"

             d:DesignHeight="250" d:DesignWidth="400">

    <UserControl.Resources>
        <converter:ImageSizeDoubleToIntegerConverter x:Key="imageSizeConverter" />
        <converter:VectorOriginPointFToMarginConverter x:Key="vectorOriginConverter" />
        <converter:CheckboxToVisibilityConverter x:Key="checkboxToVisibilityConverter" />
        <converter:ImageWidthOrHeightToScreenDPIConverter x:Key="imageWidthOrHeightToScreenDPIConverter" />
        <converter:PointFToVisiblityConverter x:Key="pointFToVisiblityConverter" />
        <converter:CheckboxToBorderTransparencyConverter x:Key="checkboxToBorderTransparencyConverter" />

        <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1"
                           Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1" />
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                        CanHorizontallyScroll="False" CanVerticallyScroll="False"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}" Grid.Column="0"
                                        Margin="{TemplateBinding Padding}" Grid.Row="0" />
                <ScrollBar x:Name="PART_VerticalScrollBar"
                           AutomationProperties.AutomationId="VerticalScrollBar"
                           Cursor="Arrow"
                           Grid.Column="1"
                           Maximum="{TemplateBinding ScrollableHeight}" Minimum="-200"
                           Grid.Row="0"
                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           ViewportSize="{TemplateBinding ViewportHeight}"
                           Style="{DynamicResource ScrollBarStyle_Vertical}" />
                <ScrollBar x:Name="PART_HorizontalScrollBar"
                           AutomationProperties.AutomationId="HorizontalScrollBar"
                           Cursor="Arrow"
                           Grid.Column="0"
                           Maximum="{TemplateBinding ScrollableWidth}" Minimum="-200"
                           Orientation="Horizontal"
                           Grid.Row="1"
                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           ViewportSize="{TemplateBinding ViewportWidth}"
                           Style="{DynamicResource ScrollBarStyle_Horizontal}" />
            </Grid>
        </ControlTemplate>
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0" />
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0" />
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF" />
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000" />
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF" />
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060" />
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA" />
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA" />
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060" />
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060" />
        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0" />
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0" />
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" BorderBrush="{StaticResource ScrollBar.Static.Border}"
                                BorderThickness="1" Background="{StaticResource ScrollBar.Static.Background}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border"
                                        Value="{StaticResource ScrollBar.MouseOver.Background}" />
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource ScrollBar.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border"
                                        Value="{StaticResource ScrollBar.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource ScrollBar.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56" />
                                <Setter Property="Background" TargetName="border"
                                        Value="{StaticResource ScrollBar.Disabled.Background}" />
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource ScrollBar.Disabled.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}"
                                   Width="{TemplateBinding Width}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6" />
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060" />
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD" />
        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}"
                                   Height="{TemplateBinding Height}" SnapsToDevicePixels="True"
                                   Width="{TemplateBinding Width}" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle"
                                        Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle"
                                        Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}"
                                   Height="{TemplateBinding Height}" SnapsToDevicePixels="True"
                                   Width="{TemplateBinding Width}" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle"
                                        Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle"
                                        Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarStyle_Vertical" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1,0" />
            <Setter Property="Width" Value="3.5" />
            <Setter Property="MinWidth" Value="3.5" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition
                                    MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition
                                    MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" Grid.Row="1" />
                            <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}"
                                          IsEnabled="{TemplateBinding IsMouseOver}"
                                          Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowTop"
                                      Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
                                      Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="2,3,2,2" Stretch="Uniform" />
                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true"
                                   IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                                  Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                                  Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}"
                                          IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2"
                                          Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowBottom"
                                      Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
                                      Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="2,3,2,2" Stretch="Uniform" />
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                               Value="true" />
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                               Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom"
                                        Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                               Value="true" />
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                               Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop"
                                        Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                               Value="true" />
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                               Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom"
                                        Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                               Value="true" />
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                               Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop"
                                        Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="ArrowTop"
                                        Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                <Setter Property="Fill" TargetName="ArrowBottom"
                                        Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="MinWidth" Value="0" />
                    <Setter Property="Height"
                            Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="MinHeight"
                            Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="BorderThickness" Value="0,1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition
                                            MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        <ColumnDefinition Width="0.00001*" />
                                        <ColumnDefinition
                                            MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}" Grid.Column="1" />
                                    <RepeatButton x:Name="PART_LineLeftButton"
                                                  Command="{x:Static ScrollBar.LineLeftCommand}"
                                                  IsEnabled="{TemplateBinding IsMouseOver}"
                                                  Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowLeft"
                                              Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                              Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3"
                                              Stretch="Uniform" />
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1"
                                           IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                          Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                          Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2"
                                                  Command="{x:Static ScrollBar.LineRightCommand}"
                                                  IsEnabled="{TemplateBinding IsMouseOver}"
                                                  Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowRight"
                                              Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                              Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3"
                                              Stretch="Uniform" />
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
                                                Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                Value="true" />
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                       Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight"
                                                Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                       Value="true" />
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                       Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft"
                                                Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
                                                Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                Value="true" />
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                       Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight"
                                                Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                       Value="true" />
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                       Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft"
                                                Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="ArrowLeft"
                                                Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                        <Setter Property="Fill" TargetName="ArrowRight"
                                                Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ScrollBarStyle_Horizontal" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1,0" />
            <Setter Property="Width" Value="3" />
            <Setter Property="MinWidth" Value="3" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition
                                    MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition
                                    MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" Grid.Row="1" />
                            <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}"
                                          IsEnabled="{TemplateBinding IsMouseOver}"
                                          Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowTop"
                                      Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
                                      Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="2,3,2,2" Stretch="Uniform" />
                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true"
                                   IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                                  Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                                  Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}"
                                          IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2"
                                          Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowBottom"
                                      Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
                                      Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="2,3,2,2" Stretch="Uniform" />
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                               Value="true" />
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                               Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom"
                                        Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                               Value="true" />
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                               Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop"
                                        Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                               Value="true" />
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                               Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom"
                                        Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                               Value="true" />
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                               Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop"
                                        Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="ArrowTop"
                                        Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                <Setter Property="Fill" TargetName="ArrowBottom"
                                        Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="MinWidth" Value="0" />

                    <Setter Property="Height" Value="3.5" />
                    <Setter Property="MinHeight" Value="3.5" />
                    <Setter Property="BorderThickness" Value="0,1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition
                                            MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        <ColumnDefinition Width="0.00001*" />
                                        <ColumnDefinition
                                            MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}" Grid.Column="1" />
                                    <RepeatButton x:Name="PART_LineLeftButton"
                                                  Command="{x:Static ScrollBar.LineLeftCommand}"
                                                  IsEnabled="{TemplateBinding IsMouseOver}"
                                                  Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowLeft"
                                              Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                              Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3"
                                              Stretch="Uniform" />
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1"
                                           IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                          Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                          Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2"
                                                  Command="{x:Static ScrollBar.LineRightCommand}"
                                                  IsEnabled="{TemplateBinding IsMouseOver}"
                                                  Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowRight"
                                              Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                              Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3"
                                              Stretch="Uniform" />
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
                                                Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                Value="true" />
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                       Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight"
                                                Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                       Value="true" />
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                       Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft"
                                                Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
                                                Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                Value="true" />
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                       Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight"
                                                Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                       Value="true" />
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                       Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft"
                                                Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="ArrowLeft"
                                                Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                        <Setter Property="Fill" TargetName="ArrowRight"
                                                Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>


    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="Default" />

                <VisualState x:Name="BlackTheme">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                            Storyboard.TargetName="textBlock">
                            <EasingColorKeyFrame KeyTime="0" Value="White" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                            Storyboard.TargetName="textBlock1">
                            <EasingColorKeyFrame KeyTime="0" Value="White" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                            Storyboard.TargetName="textBlock2">
                            <EasingColorKeyFrame KeyTime="0" Value="White" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                            Storyboard.TargetName="textBlock3">
                            <EasingColorKeyFrame KeyTime="0" Value="White" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                            Storyboard.TargetName="textBlock4">
                            <EasingColorKeyFrame KeyTime="0" Value="White" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                            Storyboard.TargetName="textBlock5">
                            <EasingColorKeyFrame KeyTime="0" Value="White" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                            Storyboard.TargetName="checkbox_crosshair">
                            <EasingColorKeyFrame KeyTime="0" Value="White" />
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                            Storyboard.TargetName="checkbox_border">
                            <EasingColorKeyFrame KeyTime="0" Value="White" />
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <ScrollViewer Grid.Row="0"
                      VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                      Template="{DynamicResource ScrollViewerControlTemplate1}">

            <Grid Height="4000" Width="4000" Margin="200,100,0,0">
                <!-- Image and borders-->
                <Grid Width="{Binding ImageWidth, Converter={StaticResource imageWidthOrHeightToScreenDPIConverter}}"
                      Height="{Binding ImageHeight, Converter={StaticResource imageWidthOrHeightToScreenDPIConverter}}"
                      VerticalAlignment="Top" HorizontalAlignment="Left" Margin="80,50,0,0">

                    <Border
                        BorderBrush="{Binding ElementName=checkbox_border, Path=IsChecked, Converter={StaticResource checkboxToBorderTransparencyConverter}}"
                        BorderThickness="0.5" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Border.RenderTransform>
                            <ScaleTransform
                                ScaleX="{Binding ElementName=ZoomSlider, Path='Value'}"
                                ScaleY="{Binding ElementName=ZoomSlider, Path='Value'}" />
                        </Border.RenderTransform>

                        <Grid>
                            <!-- Source="pack://siteoforigin:,,,/Resources/ladyboss_test_attack2_0.png" -->
                            <!-- Source="{Binding Image}"  -->
                            <Image x:Name="canvasPropBox"
                                   Source="{Binding Image}"
                                   SnapsToDevicePixels="True" UseLayoutRounding="True"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.EdgeMode="Aliased"

                                   Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" />

                            <!-- Click draggable borders-->
                            <Grid
                                Visibility="{Binding ElementName=checkbox_border, Path=IsChecked, Converter={StaticResource checkboxToVisibilityConverter}}">
                                <!-- Top-Left -->
                                <Rectangle x:Name="Rectangle_TopLeft"
                                           Stroke="Black" Height="1" Width="1"
                                           VerticalAlignment="Top" HorizontalAlignment="Left"
                                           MouseLeftButtonDown="Rectangle_MouseLeftButtonDown"
                                           MouseMove="Rectangle_MouseMove"
                                           MouseLeftButtonUp="Rectangle_MouseLeftButtonUp" />

                                <!-- Top-Right -->
                                <Rectangle x:Name="Rectangle_TopRight"
                                           Stroke="Black" Height="1" Width="1"
                                           VerticalAlignment="Top" HorizontalAlignment="Right"
                                           MouseLeftButtonDown="Rectangle_MouseLeftButtonDown"
                                           MouseMove="Rectangle_MouseMove"
                                           MouseLeftButtonUp="Rectangle_MouseLeftButtonUp" />

                                <!-- Bottom-Left -->
                                <Rectangle x:Name="Rectangle_BottomLeft"
                                           Stroke="Black" Height="1" Width="1"
                                           VerticalAlignment="Bottom" HorizontalAlignment="Left"
                                           MouseLeftButtonDown="Rectangle_MouseLeftButtonDown"
                                           MouseMove="Rectangle_MouseMove"
                                           MouseLeftButtonUp="Rectangle_MouseLeftButtonUp" />

                                <!-- Bottom-Right -->
                                <Rectangle x:Name="Rectangle_BottomRight"
                                           Stroke="Black" Height="1" Width="1"
                                           VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                           MouseLeftButtonDown="Rectangle_MouseLeftButtonDown"
                                           MouseMove="Rectangle_MouseMove"
                                           MouseLeftButtonUp="Rectangle_MouseLeftButtonUp" />
                            </Grid>

                            <!-- Crosshair for vector origin-->
                            <!-- Margin="{Binding CanvasVectorOrigin, Converter={StaticResource vectorOriginConverter}}"
                        -->
                            <Grid
                                Visibility="{Binding ElementName=checkbox_crosshair, Path=IsChecked, Converter={StaticResource checkboxToVisibilityConverter}}"
                                HorizontalAlignment="Left" VerticalAlignment="Top"
                                Margin="{Binding CanvasVectorOrigin, Converter={StaticResource vectorOriginConverter}}">

                                <!-- Grid to compensate for the crosshair length-->
                                <!-- Crosshair must always only be 1/2 of the image width and height-->
                                <Grid Margin="-5,0,0,-5"
                                      Visibility="{Binding CanvasVectorOrigin, Converter={StaticResource pointFToVisiblityConverter}}">
                                    <Grid Width="0.5" Height="10" Background="DarkCyan" />
                                    <Grid Height="0.5" Width="10" Background="DarkCyan" />
                                </Grid>
                            </Grid>

                            <!-- Grid for head crosshair-->
                            <Grid
                                Visibility="{Binding ElementName=checkbox_crosshair, Path=IsChecked, Converter={StaticResource checkboxToVisibilityConverter}}"
                                HorizontalAlignment="Left" VerticalAlignment="Top"
                                Margin="{Binding CanvasVectorHead, Converter={StaticResource vectorOriginConverter}}">

                                <!-- Grid to compensate for the crosshair length-->
                                <!-- Crosshair must always only be 1/2 of the image width and height-->
                                <Grid Margin="-5,0,0,-5"
                                      Visibility="{Binding CanvasVectorHead, Converter={StaticResource pointFToVisiblityConverter}}">
                                    <Grid Width="0.5" Height="10" Background="DarkOrange" />
                                    <Grid Height="0.5" Width="10" Background="DarkOrange" />
                                </Grid>
                            </Grid>

                            <!-- Grid for head lt-->
                            <Grid
                                Visibility="{Binding ElementName=checkbox_crosshair, Path=IsChecked, Converter={StaticResource checkboxToVisibilityConverter}}"
                                HorizontalAlignment="Left" VerticalAlignment="Top"
                                Margin="{Binding CanvasVectorLt, Converter={StaticResource vectorOriginConverter}}">

                                <!-- Grid to compensate for the crosshair length-->
                                <!-- Crosshair must always only be 1/2 of the image width and height-->
                                <Grid Margin="-5,0,0,-5"
                                      Visibility="{Binding CanvasVectorLt, Converter={StaticResource pointFToVisiblityConverter}}">
                                    <Grid Width="0.5" Height="10" Background="DarkMagenta" />
                                    <Grid Height="0.5" Width="10" Background="DarkMagenta" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>

                <!-- Image width-->
                <StackPanel
                    Visibility="{Binding ElementName=checkbox_crosshair, Path=IsChecked, Converter={StaticResource checkboxToVisibilityConverter}}"
                    Margin="0,80,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="textBlock" Text="Width: " FontSize="10" FontWeight="Bold" />
                        <TextBlock x:Name="textBlock1"
                                   Text="{Binding ImageWidth, Converter={StaticResource imageSizeConverter}}"
                                   FontSize="10" />
                        <TextBlock x:Name="textBlock2" Text="px " Margin="3,0,0,0" FontSize="10" />
                    </StackPanel>
                </StackPanel>

                <!-- Image height -->
                <StackPanel
                    Visibility="{Binding ElementName=checkbox_crosshair, Path=IsChecked, Converter={StaticResource checkboxToVisibilityConverter}}"
                    Margin="80,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="textBlock3" Text="Height: " FontSize="10" FontWeight="Bold" />
                        <TextBlock x:Name="textBlock4"
                                   Text="{Binding ImageHeight, Converter={StaticResource imageSizeConverter}}"
                                   FontSize="10" />
                        <TextBlock x:Name="textBlock5" Text="px " Margin="3,0,0,0" FontSize="10" />
                    </StackPanel>
                </StackPanel>
            </Grid>
        </ScrollViewer>

        <!-- Checkbox to enable crosshair or not-->
        <Grid Grid.Row="0" Margin="15">

            <!-- Displays the origin, delay, head and lt-->
            <Grid VerticalAlignment="Bottom" HorizontalAlignment="Right"
                  Visibility="{Binding ElementName=checkbox_crosshair, Path=IsChecked, Converter={StaticResource checkboxToVisibilityConverter}}"
                  Margin="0,70,0,0">

                <Border BorderThickness="0.6">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="15" />
                            <RowDefinition Height="15" />
                            <RowDefinition Height="15" />
                            <RowDefinition Height="15" />
                        </Grid.RowDefinitions>

                        <!-- 'delay' -->
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="75" />
                                <ColumnDefinition Width="33" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Delay:" Margin="0,0,0,0" FontSize="10" Foreground="Gray" FontWeight="Bold"
                                       Grid.Column="0" />

                            <TextBox x:Name="textbox_delay" Text="0" Margin="3,0,0,0" FontSize="10" InputScope="Number"
                                     Grid.Column="1"
                                     TextChanged="textbox_delay_TextChanged" />
                            <!--<TextBlock Text="{Binding Delay}" Margin="3,0,0,0" FontSize="10"  Foreground="Gray"
                                    Grid.Column="1"/>-->

                            <Button x:Name="button_delayEdit" Content="Save" Margin="3,0,0,0" FontSize="8" Width="30"
                                    IsEnabled="False"
                                    Grid.Column="2" Click="button_delayEdit_Click" HorizontalAlignment="Left" />
                        </Grid>


                        <!-- 'origin' -->
                        <Grid Grid.Row="1"
                              Visibility="{Binding CanvasVectorOrigin, Converter={StaticResource pointFToVisiblityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="75" />
                                <ColumnDefinition Width="33" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Origin XY:" Margin="0,0,0,0" FontSize="10" Foreground="DarkCyan"
                                       FontWeight="Bold"
                                       Grid.Column="0" />
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5*" />
                                    <ColumnDefinition Width="5*" />
                                </Grid.ColumnDefinitions>

                                <TextBox x:Name="textbox_originX" Text="0" Margin="3,0,0,0" FontSize="10"
                                         InputScope="Number"
                                         Grid.Column="0"
                                         TextChanged="textbox_origin_TextChanged" />
                                <TextBox x:Name="textbox_originY" Text="0" Margin="3,0,0,0" FontSize="10"
                                         InputScope="Number"
                                         Grid.Column="1"
                                         TextChanged="textbox_origin_TextChanged" />
                            </Grid>
                            <!--<TextBlock Text="{Binding CanvasVectorOrigin, Converter={StaticResource pointFOriginToStringConverter}}" Margin="3,0,0,0" FontSize="10"  Foreground="DarkCyan"
                                        Grid.Column="1"/>-->

                            <Button x:Name="button_originEdit" Content="Save" Margin="3,0,0,0" FontSize="8" Width="30"
                                    IsEnabled="False"
                                    Grid.Column="2" Click="button_originEdit_Click" />
                        </Grid>

                        <!-- 'head' -->
                        <Grid Grid.Row="2"
                              Visibility="{Binding CanvasVectorHead, Converter={StaticResource pointFToVisiblityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="75" />
                                <ColumnDefinition Width="33" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Head XY:" Margin="0,0,0,0" FontSize="10" Foreground="DarkOrange"
                                       FontWeight="Bold"
                                       Grid.Column="0" />
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5*" />
                                    <ColumnDefinition Width="5*" />
                                </Grid.ColumnDefinitions>

                                <TextBox x:Name="textbox_headX" Text="0" Margin="3,0,0,0" FontSize="10"
                                         InputScope="Number"
                                         Grid.Column="0"
                                         TextChanged="textbox_head_TextChanged" />
                                <TextBox x:Name="textbox_headY" Text="0" Margin="3,0,0,0" FontSize="10"
                                         InputScope="Number"
                                         Grid.Column="1"
                                         TextChanged="textbox_head_TextChanged" />
                            </Grid>
                            <!-- <TextBlock Text="{Binding CanvasVectorHead, Converter={StaticResource pointFOriginToStringConverter}}" Margin="3,0,0,0" FontSize="10"  Foreground="DarkOrange"
                                        Grid.Column="1"/>-->

                            <Button x:Name="button_headEdit" Content="Save" Margin="3,0,0,0" FontSize="8" Width="30"
                                    IsEnabled="False"
                                    Grid.Column="2" Click="button_headEdit_Click" />
                        </Grid>

                        <!-- 'lt' -->
                        <Grid Grid.Row="3"
                              Visibility="{Binding CanvasVectorLt, Converter={StaticResource pointFToVisiblityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="75" />
                                <ColumnDefinition Width="33" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="lt XY:" Margin="0,0,0,0" FontSize="10" Foreground="DarkMagenta"
                                       FontWeight="Bold"
                                       Grid.Column="0" />
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5*" />
                                    <ColumnDefinition Width="5*" />
                                </Grid.ColumnDefinitions>

                                <TextBox x:Name="textbox_ltX" Text="0" Margin="3,0,0,0" FontSize="10"
                                         InputScope="Number"
                                         Grid.Column="0"
                                         TextChanged="textbox_lt_TextChanged" />
                                <TextBox x:Name="textbox_ltY" Text="0" Margin="3,0,0,0" FontSize="10"
                                         InputScope="Number"
                                         Grid.Column="1"
                                         TextChanged="textbox_lt_TextChanged" />
                            </Grid>
                            <!--  <TextBlock Text="{Binding CanvasVectorLt, Converter={StaticResource pointFOriginToStringConverter}}" Margin="3,0,0,0" FontSize="10"  Foreground="DarkMagenta"
                                        Grid.Column="1"/>-->

                            <Button x:Name="button_ltEdit" Content="Save" Margin="3,0,0,0" FontSize="8" Width="30"
                                    IsEnabled="False"
                                    Grid.Column="2" Click="button_ltEdit_Click" />
                        </Grid>
                    </Grid>
                </Border>
            </Grid>

            <StackPanel VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,5,10,0">
                <CheckBox x:Name="checkbox_crosshair" Content="Crosshair"
                          Checked="checkbox_crosshair_Checked" Unchecked="checkbox_crosshair_Checked" />
                <CheckBox x:Name="checkbox_border" Content="Border"
                          Checked="checkbox_border_Checked" Unchecked="checkbox_border_Checked" />
            </StackPanel>
        </Grid>


        <Grid x:Name="grid_zoom" Grid.Row="1" VerticalAlignment="Bottom">
            <Slider Name="ZoomSlider"
                    Margin="10,0,10,0"
                    Minimum="0.1"
                    Maximum="20"
                    Value="3"
                    TickFrequency="0.05"
                    SmallChange="0.05"
                    LargeChange="0.1"
                    ValueChanged="ZoomSlider_ValueChanged" />
        </Grid>
    </Grid>
</UserControl>